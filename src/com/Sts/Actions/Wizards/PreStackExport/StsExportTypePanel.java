package com.Sts.Actions.Wizards.PreStackExport;

import com.Sts.Actions.Wizards.*;
import com.Sts.UI.Beans.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2002</p>
 * <p>Company: </p>
 * @author unascribed
 * @version 1.0
 */

public class StsExportTypePanel extends StsJPanel implements ActionListener
{
    private StsWizard wizard;
    private StsWizardStep wizardStep;

    StsGroupBox typeBox = new StsGroupBox("Data Type");
    ButtonGroup typeGroup = new ButtonGroup();
    JRadioButton velocityBtn = new JRadioButton("Velocity Model");
    JRadioButton stackBtn = new JRadioButton("Stacked Volume");
    JRadioButton semblanceBtn = new JRadioButton("Semblance Volume");
    JRadioButton dataBtn = new JRadioButton("Gather Data");
    
    StsGroupBox dimensionBox = new StsGroupBox("Data Dimension");
    ButtonGroup dimensionGroup = new ButtonGroup();
    JRadioButton twoBtn = new JRadioButton("2D");
    JRadioButton threeBtn = new JRadioButton("3D");
    
    JTextArea typeDescription = new JTextArea();

    byte type = StsPreStackExportWizard.VELOCITY;
    byte dimension = StsPreStackExportWizard.THREE_D;

    public StsExportTypePanel(StsWizard wizard, StsWizardStep wizardStep)
    {
        this.wizard = wizard;
        this.wizardStep = wizardStep;
        try
        {
            jbInit();
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }

    public void initialize()
    {
    	
    }

    void jbInit() throws Exception
    {
        dimensionBox.gbc.anchor = typeBox.gbc.WEST;
        dimensionBox.addToRow(twoBtn);
        dimensionBox.addEndRow(threeBtn);
        twoBtn.addActionListener(this);
        threeBtn.addActionListener(this);
        dimensionGroup.add(twoBtn);
        dimensionGroup.add(threeBtn);
        
        typeBox.gbc.anchor = typeBox.gbc.WEST;
        typeBox.addToRow(velocityBtn);
        typeBox.addEndRow(stackBtn);
        typeBox.addToRow(semblanceBtn);
        typeBox.addEndRow(dataBtn);
        typeGroup.add(velocityBtn);
        typeGroup.add(stackBtn);
        typeGroup.add(semblanceBtn);
        typeGroup.add(dataBtn);
        
        // Temporarily disabled until coded.
        stackBtn.setEnabled(false);
        semblanceBtn.setEnabled(false);
        dataBtn.setEnabled(false);
        
        velocityBtn.addActionListener(this);
        stackBtn.addActionListener(this);
        semblanceBtn.addActionListener(this);
        dataBtn.addActionListener(this);

        typeDescription.setBackground(Color.lightGray);
        typeDescription.setFont(new java.awt.Font("Dialog", 0, 10));
        typeDescription.setBorder(BorderFactory.createEtchedBorder());
        typeDescription.setText("Creates a virtual volume through the application of math functions between" +
                           " physical volumes, virtual volumes and scalars");
        typeDescription.setLineWrap(true);
        typeDescription.setWrapStyleWord(true);
        
        gbc.fill = gbc.BOTH;        
        addEndRow(dimensionBox);
        addEndRow(typeBox);
        addEndRow(typeDescription);
        
        velocityBtn.setSelected(true);
        threeBtn.setSelected(true);
    }

    public void actionPerformed(ActionEvent e)
    {
        Object source = e.getSource();
        if(source == velocityBtn)
        {
            typeDescription.setText("Export a velocity model to a SegY formatted file.");
            type = StsPreStackExportWizard.VELOCITY;
        }
        if(source == dataBtn)
        {
            typeDescription.setText("Export the original gather data to a SegY formatted file.");
            type = StsPreStackExportWizard.GATHER_DATA;
        }
        if(source == stackBtn)
        {
            typeDescription.setText("Export a post-stack volume generated from stacking the prestack " +
            		                "gathers using the current velocity model.");
            type = StsPreStackExportWizard.STACK;
        }
        if(source == semblanceBtn)
        {
            typeDescription.setText("Export a post-stack semblance volume generated by extracting the semblance values" +
            					    " corresponding to the current velocity model.");
            type = StsPreStackExportWizard.SEMBLANCE;
        }
        if(source == threeBtn)
           dimension = StsPreStackExportWizard.THREE_D;
        if(source == twoBtn)
     	   dimension = StsPreStackExportWizard.TWO_D;        	
    }

    public byte getExportType()
    {
        return this.type;
    }
    public byte getExportDimension()
    {
        return dimension;
    }

}
